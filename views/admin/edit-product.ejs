<%- include("../../views/partials/admin/header") %>
<style>
    .size-quantity {
    display: flex;
    align-items: center;
    margin-bottom: 15px;
}

.size-quantity label {
    flex: 0 0 100px; /* Set label width */
    font-weight: bold;
    margin-right: 10px;
}

.size-quantity input {
    flex: 1; 
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 16px;
    box-sizing: border-box;
}

.size-quantity input:focus {
    border-color: #007bff;
    outline: none;
}

.error-message {
    color: red;
    font-size: 12px;
    margin-top: 5px;
    display: none; /* Hide by default, show it via JavaScript when needed */
}


       .thumbnails-container {
           display: flex;
           overflow-x: auto;
       }


       .thumbnail {
           margin-right: 10px;
       }
       .input-upload {
   position: relative;
}


.error-message {
           color: red;
           display: none;
       }

       .fa-thin.fa-x {
  color: #dc3545; /* Red for delete icon */
  font-size: 1.5rem;
  cursor: pointer;
}

.size-quantity {
            margin: 10px 0;
        }
        .error-message {
            color: red;
            font-size: 0.9em;
            margin-top: 5px;
            display: none;
        }


   </style>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

   <!-- Include Font Awesome JS (optional) -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>


</head>
   <section class="content-main" style="margin-left: 30%;">
       <div class="row">
           <div class="col-9">
               <div class="content-header">
                   <h2 class="content-title">Edit Product</h2>


               </div>
           </div>
           <div class="col-lg-6">
               <div class="card mb-4">


                   <div class="card-body">
                    <form action="/admin/editProduct/<%=product._id%>" method="POST" enctype="multipart/form-data" id="editForm" onsubmit="return validateForm()">
                           <div class="mb-4">
                               <label for="product_name" class="form-label">Product Name</label>
                               <input type="text" name="productName" value="<%=product.productName%>"
                                   class="form-control border" id="product_name"> 
                                   <div id="productName-error" class="error-message"></div>
                           </div>
                           <div class="mb-4">
                               <label class="form-label">Full description</label>
                               <input name="descriptionData" value="<%=product.description%>"  class="form-control border"
                                   rows="4">
                                   <div id="description-error" class="error-message"></div>
                           </div>
                           <div class="row">
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Regular price</label>
                                       <input placeholder="$" id="regularPrice" name="regularPrice" type="text"
                                           value="<%=product.regularPrice%>" class="form-control border">
                                           <div id="regularPrice-error" class="error-message"></div>
                                   </div>
                               </div>
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Sale price</label>
                                       <input name="salePrice" id="salePrice" type="text" value="<%=product.salePrice%>"
                                           class="form-control border">
                                   </div>
                                   <div id="salePrice-error" class="error-message"></div>
                               </div>
                           </div>
                           <% product.variant.forEach((s) => { %>
                            <div class="size-quantity" style="width: 50%;">
                              <label for="size_<%= s.size %>"><%= s.size %></label>
                              <input
                                type="number"
                                name="size[<%= s.size %>][quantity]"
                                id="size_<%= s.size %>"
                                placeholder="Quantity"
                                min="0"
                                value="<%= s.quantity %>"
                                required
                              />
                              <div id="size-<%=s.size %>" class="error-message"></div>
                            </div>
                          <% }) %>
                           <div class="card mb-4">

                               <div class="card-body">
                                   <div class="row gx-2">
                                       <div class="col-sm-6 mb-3">
                                           <label class="form-label">Category</label>
                                           <select class="form-select border" style="width: 150px;" name="category">
                                            <%for(let i=0;i<cat.length;i++){%>
                                                <option value="<%=cat[i].name%>">
                                                 <%=cat[i].name%>
                                                </option>
                                            <%}%>
                                        </select>
                                        <br>
                                           <div id="category-error" class="error-message"></div>
                                       </div>
                                   </div>
                               </div>
                           </div>
                           <div class="card mb-2">
                               <div class="card-header">
                                   <h4>Choose images</h4>
                               </div>
                               <% if (product.productImage && product.productImage.length > 0) { %>
                                <% product.productImage.forEach((image, index) => { %>
                                    <div class="col-md-12">
                                        <div class="mb-4 position-relative">
                                            <div class="col-12">
                                                <input type="hidden" name="imageData" value="<%= image %>" id="imageData<%= index %>">
                                                
                                                <!-- Display the product image -->
                                                <img class="rounded" 
                                                     style="width: 50px; height: 60px;" 
                                                     src="<%= process.env.BASE_URL || 'http://localhost:3000' %><%= image %>" 
                                                     alt="Image <%= index + 1 %> of <%= product.productName %>">
                                                
                                                <!-- Delete icon -->
                                                <i onclick="deleteSingleImage('<%= image %>', '<%= product._id %>')" 
                                                   style="position: absolute; top: 0; right: 0; cursor: pointer;" 
                                                   class="fas fa-times text-danger" 
                                                   title="Delete this image"></i>
                                            </div>
                                        </div>
                                    </div>
                                <% }); %>
                            <% } else { %>
                                <div class="col-md-12 text-center">
                                    <p>No images available for this product.</p>
                                </div>
                            <% } %>
                            
                            
                              
                                  
                                       <div class="card-body">
                                        <!-- Image View and File Input Section 1 -->
                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                            <img src="" alt="" id="imgView1">
                                            <input class="form-control" type="file" name="images" id="input1" accept="image/png, image/jpeg, image/jpg" onchange="viewImage1(event), viewImage(event, 1)">
                                        </div>
                                        <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                            <img src="" id="croppedImg1" alt="">
                                            <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                        </div>
                                
                                        <!-- Image View and File Input Section 2 -->
                                        <div class="row">
                                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                <img src="" alt="" id="imgView2">
                                                <input class="form-control" type="file" name="images" id="input2" accept="image/png, image/jpeg, image/jpg" onchange="viewImage2(event), viewImage(event, 2)">
                                            </div>
                                            <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                <img src="" id="croppedImg2" alt="">
                                                <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                            </div>
                                        </div>
                                
                                        <!-- Image View and File Input Section 3 -->
                                        <div class="row">
                                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                <img src="" alt="" id="imgView3">
                                                <input class="form-control" type="file" name="images" id="input3" accept="image/png, image/jpeg, image/jpg" onchange="viewImage3(event), viewImage(event, 3)">
                                            </div>
                                            <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                <img src="" id="croppedImg3" alt="">
                                                <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                            </div>
                                        </div>
                                

                                        <div>
                                            <button class="btn btn-md rounded font-sm hover-up" id="updatebtn" type="button" onclick="validateAndSubmit()">Update</button>
                                        </div>
                                  </div>
                             </form>
                        </div>
                   </div>
              </div>
       </div>
       </div>
   </section>
   <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

<%- include("../../views/partials/admin/footer") %>

<script>


function validateAndSubmit() {
    if (validateForm()) {
        document.getElementById('editForm').submit();
    }
}

function validateForm() {
    let isValid = true;

    // Clear existing error messages
    clearErrorMessages();

    // Validate product name
    const productName = document.getElementById("product_name");
    if (!productName.value.trim()) {
        showError("productName-error", "Product name is required.");
        isValid = false;
    }

    // Validate description
    const description = document.querySelector("[name='descriptionData']");
    if (!description.value.trim()) {
        showError("description-error", "Description is required.");
        isValid = false;
    }

    // Validate regular price
    const regularPrice = document.getElementById("regularPrice");
    if (!regularPrice.value.trim() || isNaN(regularPrice.value) || Number(regularPrice.value) <= 0) {
        showError("regularPrice-error", "Enter a valid regular price greater than 0.");
        isValid = false;
    }

    // Validate sale price
    const salePrice = document.getElementById("salePrice");
    if (!salePrice.value.trim() || isNaN(salePrice.value) || Number(salePrice.value) <= 0) {
        showError("salePrice-error", "Enter a valid sale price greater than 0.");
        isValid = false;
    } else if (Number(salePrice.value) >= Number(regularPrice.value)) {
        showError("salePrice-error", "Sale price must be less than the regular price.");
        isValid = false;
    }

    // Validate size quantities
    const sizeInputs = document.querySelectorAll("[name^='size']");
console.log(sizeInputs); 
sizeInputs.forEach((input) => {
    const sizeErrorId = `${input.id}`;
    const sizeValue = input.value.trim();
    console.log(sizeValue);  
    if (!sizeValue || isNaN(sizeValue) || Number(sizeValue) < 0) {
        showError(sizeErrorId, "Enter a valid non-negative quantity for this size.");
        console.log(showError);
        
        isValid = false;
    }
});



    // Validate category selection
    const category = document.querySelector("[name='category']");
    if (!category.value.trim()) {
        showError("category-error", "Please select a category.");
        isValid = false;
    }

    return isValid;
}

// Function to clear all error messages
function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.innerText = "";
        element.style.display = "none";
    });
}

// Function to display error messages
function showError(errorId, message) {
    const errorElement = document.getElementById(errorId);
    if (errorElement) {
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }
}

    
    function viewImage1(event) {
               document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage2(event) {
               document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage3(event) {
               document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
           }
    
    
          
    
    
    
           function viewImage(event, index) {
               let input = event.target;
               let reader = new FileReader();
               reader.onload = function () {
                   let dataURL = reader.result;
                   let image = document.getElementById('imgView' + index);
                   image.src = dataURL;
                   let cropper = new Cropper(image, {
                       aspectRatio: 1,
                       viewMode: 1,
                       guides: true,
                       background: false,
                       autoCropArea: 1,
                       zoomable: true
                   });
                   let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
                   cropperContainer.style.display = 'block';
                   let saveButton = document.querySelector('#saveButton' + index);
                   saveButton.addEventListener('click', async function () {
                       let croppedCanvas = cropper.getCroppedCanvas();
                       let croppedImage = document.getElementById("croppedImg" + index);
                       croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                       let timestamp = new Date().getTime();
                       let fileName = `cropped-img-${timestamp}-${index}.png`;
                       await croppedCanvas.toBlob(blob => {
                           let input = document.getElementById('input' + index);
                           let imgFile = new File([blob], fileName, blob)
                           const fileList = new DataTransfer();
                           fileList.items.add(imgFile);
                           input.files = fileList.files
                       });
                       cropperContainer.style.display = 'none';
                   });
               };
               reader.readAsDataURL(input.files[0]);
           }
    
    
           const selectedImages = [];
       document.getElementById("imageInput").addEventListener("change", handleFileSelect);
    
    
           function handleFileSelect(event) {
               const addedImagesContainer = document.getElementById("addedImagesContainer");
               addedImagesContainer.innerHTML = "";
               const files = event.target.files;
               for (let i = 0; i < files.length; i++) {
                   const file = files[i];
                   selectedImages.push(file);
                   const thumbnail = document.createElement("div");
                   thumbnail.classList.add("thumbnail");
                   const img = document.createElement("img");
                   img.src = URL.createObjectURL(file);
                   img.alt = "thumbnail";
                   img.style.width = "50px";
                   img.style.height = "auto";
                   const removeIcon = document.createElement("span");
                   removeIcon.classList.add("remove-icon");
                   removeIcon.innerHTML = "&times;";
                   removeIcon.addEventListener("click", function () {
                       const index = selectedImages.indexOf(file);
                       if (index !== -1) {
                           selectedImages.splice(index, 1);
                       }
                       thumbnail.remove();
                   });
                   thumbnail.appendChild(img);
                   thumbnail.appendChild(removeIcon);
                   addedImagesContainer.appendChild(thumbnail);
               }
           };

          
  function deleteSingleImage(imagePath, productId) {
    if (!confirm('Are you sure you want to delete this image?')) {
        return; // Exit if user cancels
    }

    fetch(`/admin/products/delete-image/${productId}`, {
        method: 'DELETE',
        body: JSON.stringify({ imagePath }),
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(response => response.json())
    .then(result => {
        if (result.success) {
            alert('Image deleted successfully.');
            // Remove the deleted image element from the DOM
            document.querySelector(`img[src*="${imagePath}"]`).closest('.col-md-12').remove();
        } else {
            alert('Failed to delete the image. Please try again.');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while deleting the image.');
    });
}

           
       </script>
    
    